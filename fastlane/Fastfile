# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)
 
team_id = 'GTQV48M3S3'

scheme = 'kongxia'
scheme_release = 'kongxia_release'

output_directory = '../firim'
output_app_name = 'kongxia'

firim_api_token = "ac88d6e0519356744c6fd4539c9074e2"

platform :ios do

  lane :to_itunes do 
    
    increment_build_num

    build(export_method: 'app-store', configuration:'Release', schemes: scheme_release)

    upload
    
    git_commit_local

    git_push_to_current

    notifyMessage(title: "iTunes connect", message: "upload to iTunes connect")
    
  end 

  lane :to_fir do 

    increment_build_num

    to_fir_debug

    to_fir_release

    git_commit_local

    git_push_to_current

    notifyMessage(title: "Fir", subtitle: "debug / release", message: "upload to fir success")

  end

  lane :to_fir_debug do 

    build(export_method: 'development', configuration:'Debug', schemes: scheme)

    fir(changelog: "测试")

  end

  lane :to_fir_release do 

    build(export_method: 'ad-hoc', configuration:'Release', schemes: scheme_release)

    fir(changelog: "正式")

  end

  desc "打包"
  lane :build do |values|
    export_method = values[:export_method]
    configuration = values[:configuration]
    schemes = values[:schemes]
    build_number = get_build_number()
    gym(
        scheme: schemes,
        export_options: {
	        method: export_method, # 定打包方式 ["app-store", "ad-hoc", "package", "enterprise", "development", "developer-id"]
	        teamID: team_id
	      },
        clean: true,
        xcargs: "-allowProvisioningUpdates",
        output_directory: output_directory,
        output_name: "#{output_app_name}_#{build_number}_#{export_method}.ipa",
    )
  end

  desc "上传到iTunes"
  lane :upload do 
    deliver(submit_for_review: false) # 提交审核
  end

  desc "上传ipa到fir.im服务器"
  lane :fir do |options|
    changelog = options[:changelog]
    firim(
      firim_api_token: firim_api_token, 
      app_changelog: changelog
    )
  end

  desc "更新build版本号"
  lane :increment_build_num do 
    build_number = get_build_number()
    increment_build_number(
      build_number: (build_number.to_i + 1).to_s
    )
  end

  desc "添加git commit"
  lane :git_commit_local do 
    build_number = get_build_number()
    git_commit(path: '.', message: "Change build #{build_number}")
  end

  desc "推送到当前分支"
  lane :git_push_to_current do 
    branchName = git_branch()
    puts "branch name is " + branchName
    git_push_to_remote(branchName: branchName)      
  end

  desc "推送分支到远程"
  lane :git_push_to_remote do |values|
    branchName = values[:branchName]
    push_to_git_remote(
      remote: "origin",
      local_branch: branchName,
      remote_branch: branchName
    )
  end

  desc "mac 推送消息"
  lane :notifyMessage do |values|
    title = values[:title]
    subtitle = values[:subtitle]
    message = values[:message]
    notification(title: title, subtitle: subtitle, message: message)
  end 

  lane :test do 
    increment_build_number
    # git_commit
    branchName = git_branch()
    # puts "branch name is " + branchName
    # git_push_to_remote(branchName: branchName)
  end

end
